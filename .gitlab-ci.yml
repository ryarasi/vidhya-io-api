# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
build_image:
  image: docker:git
  stage: build
  services:
  - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build --platform linux/arm64-t $CI_REGISTRY_IMAGE .
    - echo $CI_REGISTRY_IMAGE
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker build -t $CI_REGISTRY_IMAGE/nginx ./nginx
    - echo $CI_REGISTRY_IMAGE
    - docker push $CI_REGISTRY_IMAGE/nginx:latest
  only:
    - master
# update_helm_chart:
#   stage: deploy
#   script:
#     - apk add --no-cache git
#     - git config --global user.email "somasekharjamalla@gmail.com"
#     - git config --global user.name "somasekharjamalla"
#     - git clone --branch helm-chart https://gitlab.com/ryarasi/vidhya-io-api.git
#     - cd your-project
#     - sed -i "s/tag: .*/tag: $CI_COMMIT_SHORT_SHA/" $HELM_CHART_PATH/values.yaml
#     - git add $HELM_CHART_PATH/values.yaml
#     - git commit -m "Update Docker image tag to $CI_COMMIT_SHORT_SHA"
#     - git push -u origin helm-chart
#     - curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
#       --data "id=$CI_PROJECT_ID&source_branch=helm-chart&target_branch=master&title=Update Docker image tag to $CI_COMMIT_SHORT_SHA" \
#       "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/merge_requests"
#   only:
#     - master

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
