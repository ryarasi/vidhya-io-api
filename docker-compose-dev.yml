version: "3.9"

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./config/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    restart: "on-failure"

  db:
    restart: always
    image: postgres
    container_name: vidhya_io_db
    environment:
      POSTGRES_USER: shuddhiadmin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shuddhidb
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  web:
    build: .
    container_name: vidhya_io_api
    # command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    command: bash -c "python manage.py collectstatic --noinput && gunicorn shuddhi.wsgi:application --bind 0.0.0.0:8000 --workers=8 --timeout=500 --reload"
    volumes:
      - .:/shuddhi
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      - redis
    restart: "on-failure"

  pgadmin:
    image: dpage/pgadmin4
    container_name: vidhya_io_pgadmin
    depends_on:
      - db
      - web
    ports:
      - "8001:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: root
    restart: always
  celery:
    restart: always
    build:
      context: .
    command: celery -A shuddhi worker -l info
    volumes:
      - .:/shuddhi
    environment:
      - DB_HOST=db
      - DB_NAME=shuddhidb
      - DB_USER=shuddhiadmin
      - DB_PASS=password
    depends_on:
      - db
      - redis
      - web
  celery-beat:
    build: 
      context: .
    command: celery -A shuddhi beat -l info
    volumes:
      - .:/shuddhi
    environment:
      - DB_HOST=db
      - DB_NAME=shuddhidb
      - DB_USER=shuddhiadmin
      - DB_PASS=password
    depends_on:
      - redis
  # zookeeper:
  #   image: zookeeper
  #   restart: always
  #   hostname: zoo1
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  # kafka:
  #   image: bitnami/kafka:latest
  #   environment:
  #     KAFKA_CFG_NODE_ID: 0
  #     KAFKA_CFG_PROCESS_ROLES: controller,broker
  #     KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
  #     KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
  #     KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #   ports:
  #     - "9092:9092"
  #     - "9093:9093"
  #   depends_on:
  #     - zookeeper
  #   restart: always

volumes:
  postgres_data:  # Named volumes can be managed easier using docker-compose
